syntax = "proto3";

package uberapi;

import "google/protobuf/empty.proto";

message Activities {
    // Total number of items available.
    int32 count = 1;
    repeated Activity history = 2;

    // Number of items to retrieve (100 max).
    int32 limit = 3;

    // Position in pagination.
    int32 offset = 4;
}

message Activity {
    // Unique identifier for the activity
    string uuid = 1;
}

message Error {
    int32 code = 1;
    string fields = 2;
    string message = 3;
}

message GetEstimatesPriceRequest {
    // Latitude component of end location.
    double end_latitude = 1;

    // Longitude component of end location.
    double end_longitude = 2;

    // Latitude component of start location.
    double start_latitude = 3;

    // Longitude component of start location.
    double start_longitude = 4;
}

message GetEstimatesPriceResponse {
    repeated PriceEstimate items = 1;
}

message GetEstimatesTimeRequest {
    // Unique customer identifier to be used for experience customization.
    string customer_uuid = 1;

    // Unique identifier representing a specific product for a given latitude & longitude.
    string product_id = 2;

    // Latitude component of start location.
    double start_latitude = 3;

    // Longitude component of start location.
    double start_longitude = 4;
}

message GetEstimatesTimeResponse {
    repeated Product items = 1;
}

message GetHistoryRequest {
    // Number of items to retrieve. Default is 5, maximum is 100.
    int32 limit = 1;

    // Offset the list of returned results by this amount. Default is zero.
    int32 offset = 2;
}

message GetProductsRequest {
    // Latitude component of location.
    double latitude = 1;

    // Longitude component of location.
    double longitude = 2;
}

message GetProductsResponse {
    repeated Product items = 1;
}

message PriceEstimate {
    // [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code.
    string currency_code = 1;

    // Display name of product.
    string display_name = 2;

    // Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or "Metered" for TAXI.
    string estimate = 3;

    // Upper bound of the estimated price.
    double high_estimate = 4;

    // Lower bound of the estimated price.
    double low_estimate = 5;

    // Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles
    string product_id = 6;

    // Expected surge multipflier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier.
    double surge_multiplier = 7;
}

message Product {
    // Capacity of product. For example, 4 people.
    string capacity = 1;

    // Description of product.
    string description = 2;

    // Display name of product.
    string display_name = 3;

    // Image URL representing the product.
    string image = 4;

    // Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
    string product_id = 5;
}

message Profile {
    // Email address of the Uber user
    string email = 1;

    // First name of the Uber user.
    string first_name = 2;

    // Last name of the Uber user.
    string last_name = 3;

    // Image URL of the Uber user.
    string picture = 4;

    // Promo code of the Uber user.
    string promo_code = 5;
}

message PutMeRequest {
    Profile profile = 1;
}

service UberAPIService {
    // Price Estimates
    // 
    // The Price Estimates endpoint returns an estimated price range
    // for each product offered at a given location. The price estimate is
    // provided as a formatted string with the full price range and the localized
    // currency symbol.<br><br>The response also includes low and high estimates,
    // and the [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code for
    // situations requiring currency conversion. When surge is active for a particular
    // product, its surge_multiplier will be greater than 1, but the price estimate
    // already factors in this multiplier.
    rpc GetEstimatesPrice(GetEstimatesPriceRequest) returns (GetEstimatesPriceResponse) {}

    // Time Estimates
    // 
    // The Time Estimates endpoint returns ETAs for all products offered at a given location, with the responses expressed as integers in seconds. We recommend that this endpoint be called every minute to provide the most accurate, up-to-date ETAs.
    rpc GetEstimatesTime(GetEstimatesTimeRequest) returns (GetEstimatesTimeResponse) {}

    // User Activity
    // 
    // The User Activity endpoint returns data about a user's lifetime activity with Uber. The response will include pickup locations and times, dropoff locations and times, the distance of past requests, and information about which products were requested.<br><br>The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.
    rpc GetHistory(GetHistoryRequest) returns (Activities) {}

    // User Profile
    // 
    // The User Profile endpoint returns information about the Uber user that has authorized with the application.
    rpc GetMe(google.protobuf.Empty) returns (Profile) {}

    // Product Types
    // 
    // The Products endpoint returns information about the *Uber* products
    // offered at a given location. The response includes the display name
    // and other details about each product, and lists the products in the
    // proper display order.
    rpc GetProducts(GetProductsRequest) returns (GetProductsResponse) {}

    // Save User Profile
    // 
    // The User Profile endpoint returns information about the Uber user that has authorized with the application.
    rpc PutMe(PutMeRequest) returns (Profile) {}
}